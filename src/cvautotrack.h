#include <string>
#include <windows.h>
std::string errToString(HRESULT err);
std::string ToString(const std::wstring &str);
bool fileExists(std::wstring name);

typedef bool (*cvautotrack_verison)(char *versionBuff);
typedef bool (*cvautotrack_init)();
typedef bool (*cvautotrack_uninit)();
typedef bool (*cvautotrack_startServe)();
typedef bool (*cvautotrack_stopServe)();
typedef bool (*cvautotrack_SetUseBitbltCaptureMode)();
typedef bool (*cvautotrack_SetUseDx11CaptureMode)();
typedef bool (*cvautotrack_SetHandle)(long long int handle);
typedef bool (*cvautotrack_SetWorldCenter)(double x, double y);
typedef bool (*cvautotrack_SetWorldScale)(double scale);
typedef bool (*cvautotrack_GetTransformOfMap)(double &x, double &y, double &a, int &mapId);
typedef bool (*cvautotrack_GetPositionOfMap)(double &x, double &y, int &mapId);
typedef bool (*cvautotrack_GetDirection)(double &a);
typedef bool (*cvautotrack_GetRotation)(double &a);
typedef bool (*cvautotrack_GetStar)(double &x, double &y, bool &isEnd);
typedef bool (*cvautotrack_GetStarJson)(char *jsonBuff);
typedef bool (*cvautotrack_GetUID)(int &uid);
typedef bool (*cvautotrack_GetInfoLoadPicture)(char *path, int &uid, double &x, double &y, double &a);
typedef bool (*cvautotrack_GetInfoLoadVideo)(char *path, char *pathOutFile);
typedef bool (*cvautotrack_DebugCapture)();
typedef int (*cvautotrack_GetLastErr)();
typedef int (*cvautotrack_GetLastErrMsg)(char *msg_buff, int buff_size);
typedef bool (*cvautotrack_GetCompileVersion)(char *version_buff, int buff_size);
typedef bool (*cvautotrack_GetCompileTime)(char *time_buff, int buff_size);
typedef int (*cvautotrack_GetLastErrJson)(char *json_buff, int buff_size);
typedef bool (*cvautotrack_DebugCapturePath)(const char*path_buff, int buff_size);

bool cvat_version(char *versionBuff);
bool cvat_init();
bool cvat_uninit();
bool cvat_startServe();
bool cvat_stopServe();
bool cvat_SetUseBitbltCaptureMode();
bool cvat_SetUseDx11CaptureMode();
bool cvat_SetHandle(long long int handle);
bool cvat_SetWorldCenter(double x, double y);
bool cvat_SetWorldScale(double scale);
bool cvat_GetTransformOfMap(double &x, double &y, double &a, int &mapId);
bool cvat_GetPositionOfMap(double &x, double &y, int &mapId);
bool cvat_GetDirection(double &a);
bool cvat_GetRotation(double &a);
bool cvat_GetStar(double &x, double &y, bool &isEnd);
bool cvat_GetStarJson(char *jsonBuff);
bool cvat_GetUID(int &uid);
bool cvat_GetInfoLoadPicture(char *path, int &uid, double &x, double &y, double &a);
bool cvat_GetInfoLoadVideo(char *path, char *pathOutFile);
bool cvat_DebugCapture();
int cvat_GetLastErr();
int cvat_GetLastErrMsg(char *msg_buff, int buff_size);
bool cvat_GetCompileVersion(char *version_buff, int buff_size);
bool cvat_GetCompileTime(char *time_buff, int buff_size);
int cvat_GetLastErrJson(char *json_buff, int buff_size);
bool cvat_DebugCapturePath(const char*path_buff, int buff_size);

std::string cvat_load();
bool startTrack();
bool stopTrack();
bool track(double &x, double &y, double &a, double &r, int &m);